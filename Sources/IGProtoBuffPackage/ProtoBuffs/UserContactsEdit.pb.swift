// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: UserContactsEdit.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct IGPUserContactsEdit: SwiftProtobuf.RequestMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var igpRequest: IGPRequest {
    get {return _storage._igpRequest ?? IGPRequest()}
    set {_uniqueStorage()._igpRequest = newValue}
  }
  /// Returns true if `igpRequest` has been explicitly set.
  public var hasIgpRequest: Bool {return _storage._igpRequest != nil}
  /// Clears the value of `igpRequest`. Subsequent reads from it will return its default value.
  public mutating func clearIgpRequest() {_uniqueStorage()._igpRequest = nil}

  public var igpPhone: Int64 {
    get {return _storage._igpPhone}
    set {_uniqueStorage()._igpPhone = newValue}
  }

  public var igpFirstName: String {
    get {return _storage._igpFirstName}
    set {_uniqueStorage()._igpFirstName = newValue}
  }

  public var igpLastName: String {
    get {return _storage._igpLastName}
    set {_uniqueStorage()._igpLastName = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct IGPUserContactsEditResponse: SwiftProtobuf.ResponseMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var igpResponse: IGPResponse {
    get {return _storage._igpResponse ?? IGPResponse()}
    set {_uniqueStorage()._igpResponse = newValue}
  }
  /// Returns true if `igpResponse` has been explicitly set.
  public var hasIgpResponse: Bool {return _storage._igpResponse != nil}
  /// Clears the value of `igpResponse`. Subsequent reads from it will return its default value.
  public mutating func clearIgpResponse() {_uniqueStorage()._igpResponse = nil}

  public var igpPhone: Int64 {
    get {return _storage._igpPhone}
    set {_uniqueStorage()._igpPhone = newValue}
  }

  public var igpFirstName: String {
    get {return _storage._igpFirstName}
    set {_uniqueStorage()._igpFirstName = newValue}
  }

  public var igpLastName: String {
    get {return _storage._igpLastName}
    set {_uniqueStorage()._igpLastName = newValue}
  }

  public var igpInitials: String {
    get {return _storage._igpInitials}
    set {_uniqueStorage()._igpInitials = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension IGPUserContactsEdit: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = "IGPUserContactsEdit"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "IGP_request"),
    2: .standard(proto: "IGP_phone"),
    3: .standard(proto: "IGP_first_name"),
    4: .standard(proto: "IGP_last_name"),
  ]

  fileprivate class _StorageClass {
    var _igpRequest: IGPRequest? = nil
    var _igpPhone: Int64 = 0
    var _igpFirstName: String = String()
    var _igpLastName: String = String()

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _igpRequest = source._igpRequest
      _igpPhone = source._igpPhone
      _igpFirstName = source._igpFirstName
      _igpLastName = source._igpLastName
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._igpRequest)
        case 2: try decoder.decodeSingularInt64Field(value: &_storage._igpPhone)
        case 3: try decoder.decodeSingularStringField(value: &_storage._igpFirstName)
        case 4: try decoder.decodeSingularStringField(value: &_storage._igpLastName)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._igpRequest {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if _storage._igpPhone != 0 {
        try visitor.visitSingularInt64Field(value: _storage._igpPhone, fieldNumber: 2)
      }
      if !_storage._igpFirstName.isEmpty {
        try visitor.visitSingularStringField(value: _storage._igpFirstName, fieldNumber: 3)
      }
      if !_storage._igpLastName.isEmpty {
        try visitor.visitSingularStringField(value: _storage._igpLastName, fieldNumber: 4)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: IGPUserContactsEdit, rhs: IGPUserContactsEdit) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._igpRequest != rhs_storage._igpRequest {return false}
        if _storage._igpPhone != rhs_storage._igpPhone {return false}
        if _storage._igpFirstName != rhs_storage._igpFirstName {return false}
        if _storage._igpLastName != rhs_storage._igpLastName {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension IGPUserContactsEditResponse: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = "IGPUserContactsEditResponse"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "IGP_response"),
    2: .standard(proto: "IGP_phone"),
    3: .standard(proto: "IGP_first_name"),
    4: .standard(proto: "IGP_last_name"),
    5: .standard(proto: "IGP_initials"),
  ]

  fileprivate class _StorageClass {
    var _igpResponse: IGPResponse? = nil
    var _igpPhone: Int64 = 0
    var _igpFirstName: String = String()
    var _igpLastName: String = String()
    var _igpInitials: String = String()

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _igpResponse = source._igpResponse
      _igpPhone = source._igpPhone
      _igpFirstName = source._igpFirstName
      _igpLastName = source._igpLastName
      _igpInitials = source._igpInitials
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._igpResponse)
        case 2: try decoder.decodeSingularInt64Field(value: &_storage._igpPhone)
        case 3: try decoder.decodeSingularStringField(value: &_storage._igpFirstName)
        case 4: try decoder.decodeSingularStringField(value: &_storage._igpLastName)
        case 5: try decoder.decodeSingularStringField(value: &_storage._igpInitials)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._igpResponse {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if _storage._igpPhone != 0 {
        try visitor.visitSingularInt64Field(value: _storage._igpPhone, fieldNumber: 2)
      }
      if !_storage._igpFirstName.isEmpty {
        try visitor.visitSingularStringField(value: _storage._igpFirstName, fieldNumber: 3)
      }
      if !_storage._igpLastName.isEmpty {
        try visitor.visitSingularStringField(value: _storage._igpLastName, fieldNumber: 4)
      }
      if !_storage._igpInitials.isEmpty {
        try visitor.visitSingularStringField(value: _storage._igpInitials, fieldNumber: 5)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: IGPUserContactsEditResponse, rhs: IGPUserContactsEditResponse) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._igpResponse != rhs_storage._igpResponse {return false}
        if _storage._igpPhone != rhs_storage._igpPhone {return false}
        if _storage._igpFirstName != rhs_storage._igpFirstName {return false}
        if _storage._igpLastName != rhs_storage._igpLastName {return false}
        if _storage._igpInitials != rhs_storage._igpInitials {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
